{"version":3,"file":"static/js/638.4ba70421.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/notes/Notes.module.css?a273","webpack://react-homework-template/./src/components/notes/addNote/addNote.module.css?5227","components/notes/addNote/addNote.jsx","components/notes/noteList/noteList.jsx","redux/filter/filter-selectors.js","components/notes/Notes.jsx","redux/filter/filter-actions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noteBlock\":\"Notes_noteBlock__qwYxf\",\"filterFild\":\"Notes_filterFild__mb+6y\"};","// extracted by mini-css-extract-plugin\nexport default {\"noteForm\":\"addNote_noteForm__bsG60\",\"formGroup\":\"addNote_formGroup__a8TfI\",\"field\":\"addNote_field__VdPlO\",\"btn\":\"addNote_btn__x-bpk\"};","import { useState, memo, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './addNote.module.css';\nimport { nanoid } from 'nanoid';\n\nconst AddNote = ({ onSubmit, id }) => {\n  const [state, setState] = useState({\n    title: '',\n    text: '',\n    favorite: false\n  });\n\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked} = target;\n    const newValue = type === \"checkbox\" ? checked : value\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({\n      title: '',\n      text: '',\n    });\n  };\n\n  const titleId = useMemo(()=> nanoid(), [])\n  const textId = useMemo(()=> nanoid(), [])\n  const favoriteId = useMemo(()=> nanoid(), [])\n  \n  return (\n    <form onSubmit={handleSubmit} className={styles.noteForm}>\n      <div className={styles.formGroup}>\n        <label htmlFor={id}>Заголовок</label>\n        <input\n          id={titleId}\n          value={state.title}\n          name=\"title\"\n          onChange={handleChange}\n          className={styles.field}\n          placeholder=\"Напишіть заголовок\"\n          type=\"text\"\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <label htmlFor={id}>Нотатка</label>\n        <input\n          id={textId}\n          value={state.text}\n          name=\"text\"\n          onChange={handleChange}\n          className={styles.field}\n          placeholder=\"Напишіть нотатку\"\n          type=\"text\"\n          required\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <label htmlFor={id}>в обрані</label>\n        <input\n          id={favoriteId}\n          checked={state.favorite}\n          name=\"favorite\"\n          onChange={handleChange}\n          className={styles.field}\n          placeholder=\"Напишіть нотатку\"\n          type=\"checkbox\"\n        />\n      </div>\n      <button className={styles.btn}>Добавити нотатку</button>\n    </form>\n  );\n};\n\nexport default memo(AddNote);\n\nAddNote.defaultProps = {\n  onSubmit: () => {},\n};\n\nAddNote.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport styles from './noteList.module.css';\nimport NoteListItem from './NoteListItem';\n\nconst NoteList = ({ items, removeNote }) => {\n   console.log(\"itemss\",items)\n\n  const elements = items.map(item => (\n    <NoteListItem key={item.id} {...item} removeNote={removeNote} />\n  ));\n \n  return (\n    <div className={styles.notises}>\n      <ul className={styles.items}>{elements}</ul>\n    </div>\n  );\n};\nexport default NoteList;\n\nNoteList.defaultProps = {\n  items: [],\n};\n\nNoteList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      text: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const getFilter = ({ filter }) => filter","import { useSelector, useDispatch } from 'react-redux';\nimport { addNote, removeNote,} from '../../redux/notes/notes-actions';\nimport styles from './Notes.module.css';\nimport AddNote from './addNote/addNote';\nimport NoteList from './noteList/noteList';\nimport { getFilteredNotes } from 'redux/notes/notes-selectors';\nimport { setFiler } from 'redux/filter/filter-actions';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nconst Notes = () => {\n  const notes = useSelector(getFilteredNotes);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onAddNote = data => {\n    const action = addNote(data);\n    dispatch(action);\n  };\n\n  const onRemoveNote = id => {\n    dispatch(removeNote(id));\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFiler(target.value));\n  };\n\n  return (\n    <div>\n      <div className={styles.noteBlock}>\n        <AddNote onSubmit={onAddNote} />\n        <input\n          className={styles.filterFild}\n          name=\"filter\"\n          onChange={handleFilter}\n          placeholder=\"Знайти\"\n          value={filter}\n        />\n      </div>\n      <div>\n        <NoteList items={notes} removeNote={onRemoveNote} />\n      </div>\n    </div>\n  );\n};\n\n\nexport default Notes;\n","import {  SET_FILTER } from \"./filter-types\";\n\nexport const setFiler = payload => {\n   return {\n      type: SET_FILTER,\n      payload\n   }\n}"],"names":["AddNote","onSubmit","id","useState","title","text","favorite","state","setState","handleChange","target","value","name","type","checked","newValue","reset","titleId","useMemo","nanoid","textId","favoriteId","e","preventDefault","className","styles","htmlFor","onChange","placeholder","required","memo","defaultProps","NoteList","items","removeNote","console","log","elements","map","item","NoteListItem","getFilter","filter","notes","useSelector","getFilteredNotes","dispatch","useDispatch","data","action","addNote","payload","SET_FILTER"],"sourceRoot":""}